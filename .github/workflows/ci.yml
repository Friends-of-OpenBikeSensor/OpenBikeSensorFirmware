name: OpenBikeSensor - CI
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
    # could use a container with sq tools already installed
       image: infinitecoding/platformio-for-ci:latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Prepare output directories
      run: mkdir bin

    - name: Install SonarQube dependencies
      run: |
        mkdir -p sonarqube
        cd sonarqube
        wget --no-verbose https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
        unzip -qq build-wrapper-linux-x86.zip
        wget --no-verbose https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.5.0.2216-linux.zip
        unzip -qq sonar-scanner-cli-4.5.0.2216-linux.zip
        cd ..
        mkdir sonarqube-out

    - name: Build firmware
      run: |
        ./sonarqube/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir sonarqube-out \
          platformio ci --build-dir="./bin" --keep-build-dir --project-conf=platformio.ini ./OpenBikeSensorFirmware/

    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: SonarQube
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ./sonarqube/sonar-scanner-4.5.0.2216-linux/bin/sonar-scanner \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=friends-of-openbikesensor \
          -Dsonar.projectKey=Friends-of-OpenBikeSensor_OpenBikeSensorFirmware \
          -Dsonar.sources=. \
          -Dsonar.sourceEncoding=UTF-8 \
          -Dsonar.cfamily.cache.enabled=false \
          -Dsonar.cfamily.threads=1 \
          -Dsonar.cfamily.build-wrapper-output=sonarqube-out


#  super-lint:
#    # Name the Job
#    name: Lint code base
#    # Set the type of machine to run on
#    runs-on: ubuntu-latest

#    steps:
#      # Checks out a copy of your repository on the ubuntu-latest machine
#      - name: Checkout code
#        uses: actions/checkout@v2

      # Runs the Super-Linter action
#      - name: Run Super-Linter
#        uses: github/super-linter@v3
#        env:
#          DEFAULT_BRANCH: master
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          FILTER_REGEX_EXCLUDE: .*/\.idea/.*
